{
	"info": {
		"_postman_id": "6e896c9b-1385-49e4-9805-13135f1a25a3",
		"name": "Terbine",
		"description": "# API testing approaches\n\n### Success pass\n\n#### Smoke tests:\n\n- Status code\n    \n- Response body - exists, not null\n    \n- Response body is JSON document\n    \n\n#### Functional test:  \n\nPOST Blog - title  \nGET Blogs - title  \nResponse body - title= value\n\nNegative - boundaries, eq classes:  \nNo Auth  \nInvalid model - invalid keys, no key  \nInvalid values:  \nnull  \n\"\"  \n\"2014\"\n\nVariables hierarchy in Postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17456907"
	},
	"item": [
		{
			"name": "Countries List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/domain/country",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"domain",
						"country"
					]
				}
			},
			"response": []
		},
		{
			"name": "Source Categories List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"})\r",
							"// JSON - fields key check"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/domain/sourcecategory",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"domain",
						"sourcecategory"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Has 'test' value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var searchVar = pm.collectionVariables.get(\"searchText\");\r",
							"    pm.expect(jsonData[0].description).to.contain(searchVar);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"searchText\", \"test\");\r",
							"// generate test data"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"{{searchText}}\", \r\n    \"filters\": {}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/search/v2/metadata?order=ASC&pageNum=1&pageSize=100&sort=INITIAL",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"search",
						"v2",
						"metadata"
					],
					"query": [
						{
							"key": "order",
							"value": "ASC"
						},
						{
							"key": "pageNum",
							"value": "1"
						},
						{
							"key": "pageSize",
							"value": "100"
						},
						{
							"key": "sort",
							"value": "INITIAL"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Search - Invalid Body",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"searchText\", \"test\");\r",
							"// generate test data"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text1\": null, \r\n    \"filters1\": {}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/search/v2/metadata?order=ASC&pageNum=1&pageSize=100&sort=INITIAL",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"search",
						"v2",
						"metadata"
					],
					"query": [
						{
							"key": "order",
							"value": "ASC"
						},
						{
							"key": "pageNum",
							"value": "1"
						},
						{
							"key": "pageSize",
							"value": "100"
						},
						{
							"key": "sort",
							"value": "INITIAL"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.terbine.io:8443/api",
			"type": "string"
		},
		{
			"key": "searchText",
			"value": "test",
			"type": "string"
		}
	]
}